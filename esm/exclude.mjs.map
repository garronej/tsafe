{"version":3,"file":"exclude.mjs","sources":["../dist/src/exclude.ts"],"sourcesContent":["/**\n * https://docs.tsafe.dev/exclude\n *\n * Return a function to use as Array.prototype.filter argument\n * to exclude one or many primitive value element from the array.\n * Ex: ([ \"a\", \"b\", \"c\" ] as const).filter(exclude(\"a\")) return (\"b\" | \"c\")[]\n * Ex: ([ \"a\", \"b\", \"c\", \"d\"] as const).filter(exclude([\"a\", \"b\"]) gives (\"c\" | \"d\")[]\n */\nexport function exclude<T extends string | number | null | undefined | boolean>(\n    target: readonly T[] | T,\n) {\n    const test: (element: any) => boolean =\n        target instanceof Object\n            ? element => target.indexOf(element) < 0\n            : element => element !== target;\n\n    return function <U>(element: U): element is Exclude<U, T> {\n        return test(element);\n    };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;AAOG;AACG,SAAU,OAAO,CACnB,MAAwB,EAAA;AAExB,IAAA,MAAM,IAAI,GACN,MAAM,YAAY,MAAM;AACpB,UAAE,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;UACtC,OAAO,IAAI,OAAO,KAAK,MAAM,CAAC;AAExC,IAAA,OAAO,UAAa,OAAU,EAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,KAAC,CAAC;AACN;;;;"}